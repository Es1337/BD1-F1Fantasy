/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.appUI;

import java.awt.CardLayout;
import java.awt.Component;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.sql.CallableStatement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;

import com.toedter.calendar.JDateChooser;
import java.text.DateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JTable;

/**
 *  Główna klasa aplikacji
 * @author kusmi
 */
public class AppUI extends javax.swing.JFrame {

    CardLayout cardLayout;
    CardLayout cardResults;
    CardLayout cardForms;
    String _userName;
    String _adminPrivileges;
    LoadRank loadRank;
    LoadTable loadTable;
    LoadCombo loadCombo;
    
    Inserts inserts;
    Deletes deletes;
    Updates updates;
    GetIds getIds;
    
    private final String dbaseURL = "jdbc:postgresql://localhost:5432/u8kusm";
    private final String dbUsername = "u8kusm";
    private final String dbPassword = "8kusm";

    /**
     * Creates new form AppUI
     * @param userName Nazwa zalogowanego użytkownika
     * @param adminPrivileges String "0"/"1" czy użytkownik jest administratorem
     */
    public AppUI(String userName, String adminPrivileges) {
        initComponents();
        _userName = userName;
        _adminPrivileges = adminPrivileges;
        cardLayout = (CardLayout) pnlCards.getLayout();
        cardResults = (CardLayout) pnlResults.getLayout();
        cardForms = (CardLayout) pnlForms.getLayout();
        
        loadRank = new LoadRank();
        loadTable = new LoadTable();
        loadCombo = new LoadCombo();
        
        inserts = new Inserts();
        deletes = new Deletes();
        updates = new Updates();
        getIds = new GetIds();
        
        ImageIcon none = new ImageIcon("img/icon.png");
        if (none != null) {
            jTree1.setCellRenderer(new Renderer(none));
        }
        
        if(Integer.parseInt(adminPrivileges) == 0) {
            btnPanel5.setVisible(false);
        }
        
        lblWelcome.setText("Witaj " + _userName + "!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        navBar = new javax.swing.JPanel();
        btnPanel1 = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnPanel2 = new javax.swing.JPanel();
        btnCard2 = new javax.swing.JButton();
        btnPanel3 = new javax.swing.JPanel();
        btnCard3 = new javax.swing.JButton();
        btnPanel4 = new javax.swing.JPanel();
        btnCard4 = new javax.swing.JButton();
        btnPanel5 = new javax.swing.JPanel();
        btnCard5 = new javax.swing.JButton();
        pnlCards = new javax.swing.JPanel();
        pnlCard1 = new javax.swing.JPanel();
        lblHomeTitle = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        pnlCard2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlResults = new javax.swing.JPanel();
        pnlDrivers = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rankDriversTable = new javax.swing.JTable();
        pnlTeams = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rankTeamsTable = new javax.swing.JTable();
        cbStandingsResults = new javax.swing.JComboBox<>();
        cbSeasonResults = new javax.swing.JComboBox<>();
        pnlCard3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jComboBox3 = new javax.swing.JComboBox<>();
        pnlCards4 = new javax.swing.JPanel();
        lblNewSeason8 = new javax.swing.JLabel();
        cbRacesPred = new javax.swing.JComboBox<>();
        cbDriver1Pred = new javax.swing.JComboBox<>();
        cbDriver2Pred = new javax.swing.JComboBox<>();
        tfPredictionValue = new javax.swing.JTextField();
        btnAddPrediction = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        predPredictionTable = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cbTeamPred = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        cbSpecialPred = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        tfValueCap = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        pnlCard5 = new javax.swing.JPanel();
        lblHomeTitle1 = new javax.swing.JLabel();
        btnNewSeason = new javax.swing.JButton();
        btnNewResult = new javax.swing.JButton();
        btnGrantPrivileges = new javax.swing.JButton();
        btnRemoveUser = new javax.swing.JButton();
        btnAlterTeam = new javax.swing.JButton();
        btnAlterDriver = new javax.swing.JButton();
        btnAlterRace = new javax.swing.JButton();
        pnlForms = new javax.swing.JPanel();
        cardNewSeason = new javax.swing.JPanel();
        lblNewSeason = new javax.swing.JLabel();
        ssnYearField = new javax.swing.JTextField();
        ssnWDCField = new javax.swing.JTextField();
        ssnWCCField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ssnConfirm = new javax.swing.JButton();
        cardNewTeams = new javax.swing.JPanel();
        lblNewSeason7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ssnTeamTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        ssnAddTeam = new javax.swing.JButton();
        ssnRemoveTeam = new javax.swing.JButton();
        ssnConfirmTeams = new javax.swing.JButton();
        lblYear = new javax.swing.JLabel();
        cardNewDrivers = new javax.swing.JPanel();
        lblNewSeason10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ssnDriverTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        ssnAddDriver = new javax.swing.JButton();
        ssnRemoveDriver = new javax.swing.JButton();
        ssnConfirmDrivers = new javax.swing.JButton();
        lblYear1 = new javax.swing.JLabel();
        cardNewRaces = new javax.swing.JPanel();
        lblNewSeason11 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ssnRaceTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        ssnAddRace = new javax.swing.JButton();
        ssnRemoveRace = new javax.swing.JButton();
        ssnConfirmRaces = new javax.swing.JButton();
        lblYear2 = new javax.swing.JLabel();
        cardNewResult = new javax.swing.JPanel();
        lblNewSeason1 = new javax.swing.JLabel();
        cbSeasons = new javax.swing.JComboBox<>();
        cbRaces = new javax.swing.JComboBox<>();
        tfPosition = new javax.swing.JTextField();
        chkDNF = new javax.swing.JCheckBox();
        chkFastestLap = new javax.swing.JCheckBox();
        btnAddResult = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        nrResultTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbDrivers = new javax.swing.JComboBox<>();
        cardGrantPrivileges = new javax.swing.JPanel();
        lblNewSeason2 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        apUserTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        tfAdminPrivUser = new javax.swing.JTextField();
        btnFindUser = new javax.swing.JButton();
        btnAddAdmin = new javax.swing.JButton();
        btnRemoveAdmin = new javax.swing.JButton();
        cardRemoveUser = new javax.swing.JPanel();
        lblNewSeason3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfRemoveUser = new javax.swing.JTextField();
        btnFindUserRemove = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        apUserTableRemove = new javax.swing.JTable();
        btnRemoveUserConfirm = new javax.swing.JButton();
        cardAlterTeam = new javax.swing.JPanel();
        lblNewSeason4 = new javax.swing.JLabel();
        cbSeasonsAlterT = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        altTeamTable = new javax.swing.JTable();
        btnAddAlterT = new javax.swing.JButton();
        btnRemoveAlterT = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        tfTeamNameAlterT = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfPointsAlterT = new javax.swing.JTextField();
        btnUpdateAlterT = new javax.swing.JButton();
        cardAlterDiver = new javax.swing.JPanel();
        lblNewSeason5 = new javax.swing.JLabel();
        cbSeasonsAlterD = new javax.swing.JComboBox<>();
        btnUpdateAlterD = new javax.swing.JButton();
        btnRemoveAlterD = new javax.swing.JButton();
        tfDriverFNameAlterD = new javax.swing.JTextField();
        tfPointsAlterD = new javax.swing.JTextField();
        btnAddAlterD = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        altDriverTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        tfDriverLNameAlterD = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tfTeamNameAlterD = new javax.swing.JTextField();
        cardAlterRace = new javax.swing.JPanel();
        lblNewSeason6 = new javax.swing.JLabel();
        cbSeasonsAlterR = new javax.swing.JComboBox<>();
        btnUpdateAlterR = new javax.swing.JButton();
        btnRemoveAlterR = new javax.swing.JButton();
        tfLocationAlterR = new javax.swing.JTextField();
        tfTrackAlterR = new javax.swing.JTextField();
        btnAddAlterR = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        altRaceTable = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tfFP1AlterR = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tfFP2AlterR = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        tfQualiAlterR = new javax.swing.JTextField();
        tfRaceAlterR = new javax.swing.JTextField();
        tfFP3AlterR = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jSplitPane1.setDividerLocation(150);

        navBar.setBackground(new java.awt.Color(67, 67, 67));

        btnPanel1.setBackground(new java.awt.Color(77, 77, 77));

        btnHome.setBackground(new java.awt.Color(67, 67, 67));
        btnHome.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnHome.setForeground(new java.awt.Color(249, 249, 249));
        btnHome.setText("Strona główna");
        btnHome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHome.setBorderPainted(false);
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.setOpaque(false);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPanel1Layout = new javax.swing.GroupLayout(btnPanel1);
        btnPanel1.setLayout(btnPanel1Layout);
        btnPanel1Layout.setHorizontalGroup(
            btnPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnPanel1Layout.setVerticalGroup(
            btnPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        btnPanel2.setBackground(new java.awt.Color(77, 77, 77));

        btnCard2.setBackground(new java.awt.Color(67, 67, 67));
        btnCard2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnCard2.setForeground(new java.awt.Color(249, 249, 249));
        btnCard2.setText("Wyniki");
        btnCard2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCard2.setBorderPainted(false);
        btnCard2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCard2.setOpaque(false);
        btnCard2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPanel2Layout = new javax.swing.GroupLayout(btnPanel2);
        btnPanel2.setLayout(btnPanel2Layout);
        btnPanel2Layout.setHorizontalGroup(
            btnPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnPanel2Layout.setVerticalGroup(
            btnPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        btnPanel3.setBackground(new java.awt.Color(77, 77, 77));

        btnCard3.setBackground(new java.awt.Color(67, 67, 67));
        btnCard3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnCard3.setForeground(new java.awt.Color(249, 249, 249));
        btnCard3.setText("Harmonogram");
        btnCard3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCard3.setBorderPainted(false);
        btnCard3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCard3.setOpaque(false);
        btnCard3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPanel3Layout = new javax.swing.GroupLayout(btnPanel3);
        btnPanel3.setLayout(btnPanel3Layout);
        btnPanel3Layout.setHorizontalGroup(
            btnPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCard3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnPanel3Layout.setVerticalGroup(
            btnPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        btnPanel4.setBackground(new java.awt.Color(77, 77, 77));

        btnCard4.setBackground(new java.awt.Color(67, 67, 67));
        btnCard4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnCard4.setForeground(new java.awt.Color(249, 249, 249));
        btnCard4.setText("Przewidywania");
        btnCard4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCard4.setBorderPainted(false);
        btnCard4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCard4.setOpaque(false);
        btnCard4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPanel4Layout = new javax.swing.GroupLayout(btnPanel4);
        btnPanel4.setLayout(btnPanel4Layout);
        btnPanel4Layout.setHorizontalGroup(
            btnPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCard4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnPanel4Layout.setVerticalGroup(
            btnPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        btnPanel5.setBackground(new java.awt.Color(77, 77, 77));

        btnCard5.setBackground(new java.awt.Color(67, 67, 67));
        btnCard5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnCard5.setForeground(new java.awt.Color(249, 249, 249));
        btnCard5.setText("Admin");
        btnCard5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCard5.setBorderPainted(false);
        btnCard5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCard5.setOpaque(false);
        btnCard5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPanel5Layout = new javax.swing.GroupLayout(btnPanel5);
        btnPanel5.setLayout(btnPanel5Layout);
        btnPanel5Layout.setHorizontalGroup(
            btnPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCard5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnPanel5Layout.setVerticalGroup(
            btnPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout navBarLayout = new javax.swing.GroupLayout(navBar);
        navBar.setLayout(navBarLayout);
        navBarLayout.setHorizontalGroup(
            navBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navBarLayout.setVerticalGroup(
            navBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navBarLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(navBar);

        pnlCards.setLayout(new java.awt.CardLayout());

        pnlCard1.setBackground(new java.awt.Color(247, 247, 247));
        pnlCard1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lblHomeTitle.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        lblHomeTitle.setText("Strona główna");

        lblWelcome.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N

        javax.swing.GroupLayout pnlCard1Layout = new javax.swing.GroupLayout(pnlCard1);
        pnlCard1.setLayout(pnlCard1Layout);
        pnlCard1Layout.setHorizontalGroup(
            pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(757, Short.MAX_VALUE))
        );
        pnlCard1Layout.setVerticalGroup(
            pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(lblWelcome)
                .addContainerGap(627, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard1, "pnlCard1");

        pnlCard2.setBackground(new java.awt.Color(247, 247, 247));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        jLabel1.setText("Wyniki");

        pnlResults.setLayout(new java.awt.CardLayout());

        rankDriversTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pozycja", "Kierowca", "Zespół", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rankDriversTable.setSelectionBackground(new java.awt.Color(206, 39, 50));
        rankDriversTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(rankDriversTable);

        javax.swing.GroupLayout pnlDriversLayout = new javax.swing.GroupLayout(pnlDrivers);
        pnlDrivers.setLayout(pnlDriversLayout);
        pnlDriversLayout.setHorizontalGroup(
            pnlDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDriversLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(879, Short.MAX_VALUE))
        );
        pnlDriversLayout.setVerticalGroup(
            pnlDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDriversLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pnlResults.add(pnlDrivers, "pnlDrivers");

        rankTeamsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pozycja", "Zespół", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rankTeamsTable.setSelectionBackground(new java.awt.Color(206, 39, 50));
        rankTeamsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(rankTeamsTable);

        javax.swing.GroupLayout pnlTeamsLayout = new javax.swing.GroupLayout(pnlTeams);
        pnlTeams.setLayout(pnlTeamsLayout);
        pnlTeamsLayout.setHorizontalGroup(
            pnlTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTeamsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(879, Short.MAX_VALUE))
        );
        pnlTeamsLayout.setVerticalGroup(
            pnlTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTeamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(455, Short.MAX_VALUE))
        );

        pnlResults.add(pnlTeams, "pnlTeams");

        cbStandingsResults.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbStandingsResults.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tabela Kierowców", "Tabela Zespołów" }));
        cbStandingsResults.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(196, 41, 41)));
        cbStandingsResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStandingsResultsActionPerformed(evt);
            }
        });

        cbSeasonResults.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSeasonResults.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(196, 41, 41)));
        cbSeasonResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonResultsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCard2Layout = new javax.swing.GroupLayout(pnlCard2);
        pnlCard2.setLayout(pnlCard2Layout);
        pnlCard2Layout.setHorizontalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlCard2Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbStandingsResults, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSeasonResults, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCard2Layout.setVerticalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard2Layout.createSequentialGroup()
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbStandingsResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSeasonResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard2, "pnlCard2");

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        jLabel2.setText("Harmonogram");

        jTree1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("JTree");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setCellRenderer(null);
        jTree1.setRootVisible(false);
        jTree1.setRowHeight(32);
        jScrollPane3.setViewportView(jTree1);

        jComboBox3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jComboBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(196, 41, 41)));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCard3Layout = new javax.swing.GroupLayout(pnlCard3);
        pnlCard3.setLayout(pnlCard3Layout);
        pnlCard3Layout.setHorizontalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCard3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        pnlCard3Layout.setVerticalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard3, "pnlCard3");

        lblNewSeason8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason8.setText("Wprowadź przewidywania");

        cbRacesPred.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbRacesPred.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        cbRacesPred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRacesPredActionPerformed(evt);
            }
        });

        cbDriver1Pred.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbDriver1Pred.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));
        cbDriver1Pred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDriver1PredActionPerformed(evt);
            }
        });

        cbDriver2Pred.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbDriver2Pred.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));

        tfPredictionValue.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfPredictionValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        tfPredictionValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPredictionValueActionPerformed(evt);
            }
        });

        btnAddPrediction.setBackground(new java.awt.Color(220, 53, 53));
        btnAddPrediction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddPrediction.setForeground(new java.awt.Color(248, 248, 248));
        btnAddPrediction.setText("Dodaj");
        btnAddPrediction.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddPrediction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPredictionActionPerformed(evt);
            }
        });

        predPredictionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Przewidywanie", "Typ", "Wartość"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        predPredictionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane13.setViewportView(predPredictionTable);

        jLabel31.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel31.setText("Wyścig:");

        jLabel32.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel32.setText("Wartość przewidywa:");

        jLabel33.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel33.setText("Kierowca 1:");

        jLabel34.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel34.setText("Kierowca 2:");

        cbTeamPred.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbTeamPred.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));

        jLabel35.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel35.setText("Zespół:");

        cbSpecialPred.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSpecialPred.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));

        jLabel36.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel36.setText("Specjalne:");

        tfValueCap.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfValueCap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        tfValueCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValueCapActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel37.setText("Limit wartości:");

        javax.swing.GroupLayout pnlCards4Layout = new javax.swing.GroupLayout(pnlCards4);
        pnlCards4.setLayout(pnlCards4Layout);
        pnlCards4Layout.setHorizontalGroup(
            pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCards4Layout.createSequentialGroup()
                .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlCards4Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPredictionValue, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfValueCap, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCards4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCards4Layout.createSequentialGroup()
                                .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlCards4Layout.createSequentialGroup()
                                        .addComponent(lblNewSeason8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(310, 310, 310))
                                    .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCards4Layout.createSequentialGroup()
                                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbTeamPred, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel36)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbSpecialPred, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlCards4Layout.createSequentialGroup()
                                            .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(pnlCards4Layout.createSequentialGroup()
                                                    .addGap(70, 70, 70)
                                                    .addComponent(btnAddPrediction, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(pnlCards4Layout.createSequentialGroup()
                                                    .addGap(54, 54, 54)
                                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbDriver2Pred, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlCards4Layout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbRacesPred, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(cbDriver1Pred, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel34)
                                .addGap(140, 140, 140)))))
                .addContainerGap(679, Short.MAX_VALUE))
        );
        pnlCards4Layout.setVerticalGroup(
            pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCards4Layout.createSequentialGroup()
                .addComponent(lblNewSeason8)
                .addGap(18, 18, 18)
                .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRacesPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(cbDriver1Pred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(cbDriver2Pred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addGap(18, 18, 18)
                .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTeamPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(cbSpecialPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addComponent(btnAddPrediction, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCards4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPredictionValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(tfValueCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(0, 453, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCards4, "pnlCard4");

        pnlCard5.setBackground(new java.awt.Color(247, 247, 247));
        pnlCard5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lblHomeTitle1.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        lblHomeTitle1.setText("Admin");

        btnNewSeason.setBackground(new java.awt.Color(220, 53, 53));
        btnNewSeason.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNewSeason.setForeground(new java.awt.Color(248, 248, 248));
        btnNewSeason.setText("Nowy Sezon");
        btnNewSeason.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnNewSeason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewSeasonActionPerformed(evt);
            }
        });

        btnNewResult.setBackground(new java.awt.Color(220, 53, 53));
        btnNewResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNewResult.setForeground(new java.awt.Color(248, 248, 248));
        btnNewResult.setText("Nowy Wynik Wyścigu");
        btnNewResult.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnNewResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewResultActionPerformed(evt);
            }
        });

        btnGrantPrivileges.setBackground(new java.awt.Color(220, 53, 53));
        btnGrantPrivileges.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGrantPrivileges.setForeground(new java.awt.Color(248, 248, 248));
        btnGrantPrivileges.setText("Nadaj Uprawnienia");
        btnGrantPrivileges.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnGrantPrivileges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrantPrivilegesActionPerformed(evt);
            }
        });

        btnRemoveUser.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveUser.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveUser.setText("Usuń Użytkownika");
        btnRemoveUser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserActionPerformed(evt);
            }
        });

        btnAlterTeam.setBackground(new java.awt.Color(220, 53, 53));
        btnAlterTeam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAlterTeam.setForeground(new java.awt.Color(248, 248, 248));
        btnAlterTeam.setText("Zaktualizuj Zespoły");
        btnAlterTeam.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAlterTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterTeamActionPerformed(evt);
            }
        });

        btnAlterDriver.setBackground(new java.awt.Color(220, 53, 53));
        btnAlterDriver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAlterDriver.setForeground(new java.awt.Color(248, 248, 248));
        btnAlterDriver.setText("Zaktualizuj Kierowców");
        btnAlterDriver.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAlterDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterDriverActionPerformed(evt);
            }
        });

        btnAlterRace.setBackground(new java.awt.Color(220, 53, 53));
        btnAlterRace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAlterRace.setForeground(new java.awt.Color(248, 248, 248));
        btnAlterRace.setText("Zaktualizuj Wyścigi");
        btnAlterRace.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAlterRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterRaceActionPerformed(evt);
            }
        });

        pnlForms.setLayout(new java.awt.CardLayout());

        lblNewSeason.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason.setText("Dodaj nowy sezon               1/4");

        ssnYearField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        ssnWDCField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        ssnWCCField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setLabelFor(ssnYearField);
        jLabel3.setText("Rok:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setLabelFor(ssnWDCField);
        jLabel4.setText("WDC:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setLabelFor(ssnWCCField);
        jLabel5.setText("WCC:");

        ssnConfirm.setBackground(new java.awt.Color(220, 53, 53));
        ssnConfirm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnConfirm.setForeground(new java.awt.Color(248, 248, 248));
        ssnConfirm.setText("Zatwierdź");
        ssnConfirm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardNewSeasonLayout = new javax.swing.GroupLayout(cardNewSeason);
        cardNewSeason.setLayout(cardNewSeasonLayout);
        cardNewSeasonLayout.setHorizontalGroup(
            cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewSeasonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ssnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardNewSeasonLayout.createSequentialGroup()
                        .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ssnYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssnWDCField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssnWCCField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(cardNewSeasonLayout.createSequentialGroup()
                .addComponent(lblNewSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cardNewSeasonLayout.setVerticalGroup(
            cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewSeasonLayout.createSequentialGroup()
                .addComponent(lblNewSeason)
                .addGap(43, 43, 43)
                .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssnYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(40, 40, 40)
                .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssnWDCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(43, 43, 43)
                .addGroup(cardNewSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssnWCCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(62, 62, 62)
                .addComponent(ssnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 257, Short.MAX_VALUE))
        );

        lblNewSeason.getAccessibleContext().setAccessibleName("lblNewSeason");

        pnlForms.add(cardNewSeason, "cardNewSeason");

        lblNewSeason7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason7.setText("Dodaj nowy sezon               2/4");

        ssnTeamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Zespołu", "Nazwa", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ssnTeamTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(ssnTeamTable);

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Dodaj zespoły");

        ssnAddTeam.setBackground(new java.awt.Color(220, 53, 53));
        ssnAddTeam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnAddTeam.setForeground(new java.awt.Color(248, 248, 248));
        ssnAddTeam.setText("Dodaj");
        ssnAddTeam.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnAddTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnAddTeamActionPerformed(evt);
            }
        });

        ssnRemoveTeam.setBackground(new java.awt.Color(220, 53, 53));
        ssnRemoveTeam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnRemoveTeam.setForeground(new java.awt.Color(248, 248, 248));
        ssnRemoveTeam.setText("Usuń");
        ssnRemoveTeam.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnRemoveTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnRemoveTeamActionPerformed(evt);
            }
        });

        ssnConfirmTeams.setBackground(new java.awt.Color(220, 53, 53));
        ssnConfirmTeams.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnConfirmTeams.setForeground(new java.awt.Color(248, 248, 248));
        ssnConfirmTeams.setText("Zatwierdź");
        ssnConfirmTeams.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnConfirmTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnConfirmTeamsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardNewTeamsLayout = new javax.swing.GroupLayout(cardNewTeams);
        cardNewTeams.setLayout(cardNewTeamsLayout);
        cardNewTeamsLayout.setHorizontalGroup(
            cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewTeamsLayout.createSequentialGroup()
                .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardNewTeamsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cardNewTeamsLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ssnAddTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ssnConfirmTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(cardNewTeamsLayout.createSequentialGroup()
                                .addGap(458, 458, 458)
                                .addComponent(ssnRemoveTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNewSeason7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        cardNewTeamsLayout.setVerticalGroup(
            cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewTeamsLayout.createSequentialGroup()
                .addComponent(lblNewSeason7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lblYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewTeamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardNewTeamsLayout.createSequentialGroup()
                        .addComponent(ssnAddTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ssnRemoveTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ssnConfirmTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 87, Short.MAX_VALUE))
        );

        pnlForms.add(cardNewTeams, "cardNewTeams");

        lblNewSeason10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason10.setText("Dodaj nowy sezon               3/4");

        ssnDriverTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Kierowcy", "Imie i Nazwisko", "Zespół", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ssnDriverTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(ssnDriverTable);

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Dodaj kierowców");

        ssnAddDriver.setBackground(new java.awt.Color(220, 53, 53));
        ssnAddDriver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnAddDriver.setForeground(new java.awt.Color(248, 248, 248));
        ssnAddDriver.setText("Dodaj");
        ssnAddDriver.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnAddDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnAddDriverActionPerformed(evt);
            }
        });

        ssnRemoveDriver.setBackground(new java.awt.Color(220, 53, 53));
        ssnRemoveDriver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnRemoveDriver.setForeground(new java.awt.Color(248, 248, 248));
        ssnRemoveDriver.setText("Usuń");
        ssnRemoveDriver.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnRemoveDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnRemoveDriverActionPerformed(evt);
            }
        });

        ssnConfirmDrivers.setBackground(new java.awt.Color(220, 53, 53));
        ssnConfirmDrivers.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnConfirmDrivers.setForeground(new java.awt.Color(248, 248, 248));
        ssnConfirmDrivers.setText("Zatwierdź");
        ssnConfirmDrivers.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnConfirmDrivers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnConfirmDriversActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardNewDriversLayout = new javax.swing.GroupLayout(cardNewDrivers);
        cardNewDrivers.setLayout(cardNewDriversLayout);
        cardNewDriversLayout.setHorizontalGroup(
            cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewDriversLayout.createSequentialGroup()
                .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardNewDriversLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cardNewDriversLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ssnAddDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ssnConfirmDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ssnRemoveDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNewSeason10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        cardNewDriversLayout.setVerticalGroup(
            cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewDriversLayout.createSequentialGroup()
                .addComponent(lblNewSeason10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(lblYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewDriversLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cardNewDriversLayout.createSequentialGroup()
                        .addComponent(ssnAddDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ssnRemoveDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ssnConfirmDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 45, Short.MAX_VALUE))
        );

        pnlForms.add(cardNewDrivers, "cardNewDrivers");

        lblNewSeason11.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason11.setText("Dodaj nowy sezon              4/4");

        ssnRaceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Lokalizacja", "Tor", "FP1", "FP2", "FP3", "Kwalifikacje", "Wyścig"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ssnRaceTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(ssnRaceTable);
        if (ssnRaceTable.getColumnModel().getColumnCount() > 0) {
            ssnRaceTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        }

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("Dodaj wyścigi");

        ssnAddRace.setBackground(new java.awt.Color(220, 53, 53));
        ssnAddRace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnAddRace.setForeground(new java.awt.Color(248, 248, 248));
        ssnAddRace.setText("Dodaj");
        ssnAddRace.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnAddRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnAddRaceActionPerformed(evt);
            }
        });

        ssnRemoveRace.setBackground(new java.awt.Color(220, 53, 53));
        ssnRemoveRace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnRemoveRace.setForeground(new java.awt.Color(248, 248, 248));
        ssnRemoveRace.setText("Usuń");
        ssnRemoveRace.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnRemoveRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnRemoveRaceActionPerformed(evt);
            }
        });

        ssnConfirmRaces.setBackground(new java.awt.Color(220, 53, 53));
        ssnConfirmRaces.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ssnConfirmRaces.setForeground(new java.awt.Color(248, 248, 248));
        ssnConfirmRaces.setText("Zatwierdź");
        ssnConfirmRaces.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        ssnConfirmRaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnConfirmRacesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardNewRacesLayout = new javax.swing.GroupLayout(cardNewRaces);
        cardNewRaces.setLayout(cardNewRacesLayout);
        cardNewRacesLayout.setHorizontalGroup(
            cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewRacesLayout.createSequentialGroup()
                .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardNewRacesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cardNewRacesLayout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ssnAddRace, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ssnConfirmRaces, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ssnRemoveRace, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNewSeason11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardNewRacesLayout.setVerticalGroup(
            cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewRacesLayout.createSequentialGroup()
                .addComponent(lblNewSeason11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(lblYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewRacesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cardNewRacesLayout.createSequentialGroup()
                        .addComponent(ssnAddRace, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ssnRemoveRace, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ssnConfirmRaces, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pnlForms.add(cardNewRaces, "cardNewRaces");

        lblNewSeason1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason1.setText("Dodaj wynik wyścigu");

        cbSeasons.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSeasons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        cbSeasons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonsActionPerformed(evt);
            }
        });

        cbRaces.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbRaces.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));
        cbRaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRacesActionPerformed(evt);
            }
        });

        tfPosition.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfPosition.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        tfPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPositionActionPerformed(evt);
            }
        });

        chkDNF.setText("DNF");
        chkDNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDNFActionPerformed(evt);
            }
        });

        chkFastestLap.setText("Najszybsze okrążenie");
        chkFastestLap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFastestLapActionPerformed(evt);
            }
        });

        btnAddResult.setBackground(new java.awt.Color(220, 53, 53));
        btnAddResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddResult.setForeground(new java.awt.Color(248, 248, 248));
        btnAddResult.setText("Dodaj");
        btnAddResult.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResultActionPerformed(evt);
            }
        });

        nrResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kierowca", "Pozycja", "DNF", "Najszybsze okrążenie", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        nrResultTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(nrResultTable);
        if (nrResultTable.getColumnModel().getColumnCount() > 0) {
            nrResultTable.getColumnModel().getColumn(1).setPreferredWidth(20);
            nrResultTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Sezon:");

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Pozycja:");

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Wyścig:");

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Kierowca:");

        cbDrivers.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbDrivers.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(155, 51, 51)));

        javax.swing.GroupLayout cardNewResultLayout = new javax.swing.GroupLayout(cardNewResult);
        cardNewResult.setLayout(cardNewResultLayout);
        cardNewResultLayout.setHorizontalGroup(
            cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewResultLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardNewResultLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkDNF, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(chkFastestLap)
                        .addGap(25, 25, 25))
                    .addGroup(cardNewResultLayout.createSequentialGroup()
                        .addGroup(cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cardNewResultLayout.createSequentialGroup()
                                .addComponent(cbSeasons, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(cbRaces, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(cardNewResultLayout.createSequentialGroup()
                .addComponent(lblNewSeason1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardNewResultLayout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbDrivers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardNewResultLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224)))
                .addGap(27, 27, 27))
        );
        cardNewResultLayout.setVerticalGroup(
            cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardNewResultLayout.createSequentialGroup()
                .addComponent(lblNewSeason1)
                .addGap(18, 18, 18)
                .addGroup(cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSeasons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbRaces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cbDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(24, 24, 24)
                .addGroup(cardNewResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDNF)
                    .addComponent(tfPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFastestLap)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pnlForms.add(cardNewResult, "cardNewResult");

        lblNewSeason2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason2.setText("Nadaj uprawnienia admina:");

        apUserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa użytkownika", "Imie i nazwisko", "Admin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        apUserTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(apUserTable);

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Szukaj użytkownika:");

        tfAdminPrivUser.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfAdminPrivUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(156, 50, 50)));

        btnFindUser.setBackground(new java.awt.Color(220, 53, 53));
        btnFindUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFindUser.setForeground(new java.awt.Color(248, 248, 248));
        btnFindUser.setText("Szukaj");
        btnFindUser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnFindUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindUserActionPerformed(evt);
            }
        });

        btnAddAdmin.setBackground(new java.awt.Color(220, 53, 53));
        btnAddAdmin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddAdmin.setForeground(new java.awt.Color(248, 248, 248));
        btnAddAdmin.setText("Nadaj uprawnienia");
        btnAddAdmin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAdminActionPerformed(evt);
            }
        });

        btnRemoveAdmin.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveAdmin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveAdmin.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveAdmin.setText("Usuń uprawnienia");
        btnRemoveAdmin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardGrantPrivilegesLayout = new javax.swing.GroupLayout(cardGrantPrivileges);
        cardGrantPrivileges.setLayout(cardGrantPrivilegesLayout);
        cardGrantPrivilegesLayout.setHorizontalGroup(
            cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardGrantPrivilegesLayout.createSequentialGroup()
                .addComponent(lblNewSeason2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 477, Short.MAX_VALUE))
            .addGroup(cardGrantPrivilegesLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardGrantPrivilegesLayout.createSequentialGroup()
                            .addComponent(btnAddAdmin)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemoveAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cardGrantPrivilegesLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfAdminPrivUser, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardGrantPrivilegesLayout.setVerticalGroup(
            cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardGrantPrivilegesLayout.createSequentialGroup()
                .addComponent(lblNewSeason2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfAdminPrivUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cardGrantPrivilegesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        pnlForms.add(cardGrantPrivileges, "cardGrantPrivileges");

        lblNewSeason3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason3.setText("Usuń użytkownika");

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Szukaj użytkownika:");

        tfRemoveUser.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfRemoveUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(156, 50, 50)));

        btnFindUserRemove.setBackground(new java.awt.Color(220, 53, 53));
        btnFindUserRemove.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFindUserRemove.setForeground(new java.awt.Color(248, 248, 248));
        btnFindUserRemove.setText("Szukaj");
        btnFindUserRemove.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnFindUserRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindUserRemoveActionPerformed(evt);
            }
        });

        apUserTableRemove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa użytkownika", "Imie i nazwisko", "Admin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        apUserTableRemove.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(apUserTableRemove);

        btnRemoveUserConfirm.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveUserConfirm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveUserConfirm.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveUserConfirm.setText("Usuń użytkownika");
        btnRemoveUserConfirm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveUserConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardRemoveUserLayout = new javax.swing.GroupLayout(cardRemoveUser);
        cardRemoveUser.setLayout(cardRemoveUserLayout);
        cardRemoveUserLayout.setHorizontalGroup(
            cardRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardRemoveUserLayout.createSequentialGroup()
                .addComponent(lblNewSeason3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 477, Short.MAX_VALUE))
            .addGroup(cardRemoveUserLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(cardRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardRemoveUserLayout.createSequentialGroup()
                        .addComponent(btnRemoveUserConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149))
                    .addGroup(cardRemoveUserLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFindUserRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardRemoveUserLayout.setVerticalGroup(
            cardRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardRemoveUserLayout.createSequentialGroup()
                .addComponent(lblNewSeason3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindUserRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveUserConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 222, Short.MAX_VALUE))
        );

        pnlForms.add(cardRemoveUser, "cardRemoveUser");

        lblNewSeason4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason4.setText("Zaktualizuj zespoły:");

        cbSeasonsAlterT.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSeasonsAlterT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        cbSeasonsAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonsAlterTActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("Sezon:");

        altTeamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        altTeamTable.getTableHeader().setReorderingAllowed(false);
        altTeamTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                altTeamTableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(altTeamTable);

        btnAddAlterT.setBackground(new java.awt.Color(220, 53, 53));
        btnAddAlterT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddAlterT.setForeground(new java.awt.Color(248, 248, 248));
        btnAddAlterT.setText("Dodaj");
        btnAddAlterT.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAlterTActionPerformed(evt);
            }
        });

        btnRemoveAlterT.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveAlterT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveAlterT.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveAlterT.setText("Usuń");
        btnRemoveAlterT.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAlterTActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("Nazwa zespołu:");

        tfTeamNameAlterT.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfTeamNameAlterT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfTeamNameAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTeamNameAlterTActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Punkty:");

        tfPointsAlterT.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfPointsAlterT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfPointsAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPointsAlterTActionPerformed(evt);
            }
        });

        btnUpdateAlterT.setBackground(new java.awt.Color(220, 53, 53));
        btnUpdateAlterT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateAlterT.setForeground(new java.awt.Color(248, 248, 248));
        btnUpdateAlterT.setText("Zaktualizuj");
        btnUpdateAlterT.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnUpdateAlterT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAlterTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardAlterTeamLayout = new javax.swing.GroupLayout(cardAlterTeam);
        cardAlterTeam.setLayout(cardAlterTeamLayout);
        cardAlterTeamLayout.setHorizontalGroup(
            cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterTeamLayout.createSequentialGroup()
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cardAlterTeamLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSeasonsAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNewSeason4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(cardAlterTeamLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterTeamLayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cardAlterTeamLayout.createSequentialGroup()
                        .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cardAlterTeamLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardAlterTeamLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPointsAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTeamNameAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        cardAlterTeamLayout.setVerticalGroup(
            cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterTeamLayout.createSequentialGroup()
                .addComponent(lblNewSeason4)
                .addGap(18, 18, 18)
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSeasonsAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterTeamLayout.createSequentialGroup()
                        .addComponent(btnUpdateAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(tfTeamNameAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(cardAlterTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(tfPointsAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btnAddAlterT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 121, Short.MAX_VALUE))
        );

        pnlForms.add(cardAlterTeam, "cardAlterTeam");

        lblNewSeason5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason5.setText("Zaktualizuj kierowców");

        cbSeasonsAlterD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSeasonsAlterD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        cbSeasonsAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonsAlterDActionPerformed(evt);
            }
        });

        btnUpdateAlterD.setBackground(new java.awt.Color(220, 53, 53));
        btnUpdateAlterD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateAlterD.setForeground(new java.awt.Color(248, 248, 248));
        btnUpdateAlterD.setText("Zaktualizuj");
        btnUpdateAlterD.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnUpdateAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAlterDActionPerformed(evt);
            }
        });

        btnRemoveAlterD.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveAlterD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveAlterD.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveAlterD.setText("Usuń");
        btnRemoveAlterD.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAlterDActionPerformed(evt);
            }
        });

        tfDriverFNameAlterD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfDriverFNameAlterD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfDriverFNameAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDriverFNameAlterDActionPerformed(evt);
            }
        });

        tfPointsAlterD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfPointsAlterD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfPointsAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPointsAlterDActionPerformed(evt);
            }
        });

        btnAddAlterD.setBackground(new java.awt.Color(220, 53, 53));
        btnAddAlterD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddAlterD.setForeground(new java.awt.Color(248, 248, 248));
        btnAddAlterD.setText("Dodaj");
        btnAddAlterD.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAlterDActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Sezon:");

        altDriverTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Imie i Nazwisko", "Zespół", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        altDriverTable.getTableHeader().setReorderingAllowed(false);
        altDriverTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                altDriverTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(altDriverTable);

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("Imię:");

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel20.setText("Punkty:");

        tfDriverLNameAlterD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfDriverLNameAlterD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfDriverLNameAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDriverLNameAlterDActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel21.setText("Nazwisko:");

        jLabel22.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("Zespół:");

        tfTeamNameAlterD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfTeamNameAlterD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfTeamNameAlterD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTeamNameAlterDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardAlterDiverLayout = new javax.swing.GroupLayout(cardAlterDiver);
        cardAlterDiver.setLayout(cardAlterDiverLayout);
        cardAlterDiverLayout.setHorizontalGroup(
            cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                .addComponent(lblNewSeason5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 477, Short.MAX_VALUE))
            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardAlterDiverLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSeasonsAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterDiverLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cardAlterDiverLayout.createSequentialGroup()
                        .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfPointsAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardAlterDiverLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(tfDriverFNameAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfTeamNameAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDriverLNameAlterD)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardAlterDiverLayout.setVerticalGroup(
            cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterDiverLayout.createSequentialGroup()
                .addComponent(lblNewSeason5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSeasonsAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterDiverLayout.createSequentialGroup()
                        .addComponent(btnUpdateAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(tfDriverFNameAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(tfDriverLNameAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cardAlterDiverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(tfPointsAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(tfTeamNameAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddAlterD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 134, Short.MAX_VALUE))
        );

        pnlForms.add(cardAlterDiver, "cardAlterDriver");

        lblNewSeason6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNewSeason6.setText("Zaktualizuj wyścigi");

        cbSeasonsAlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbSeasonsAlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(159, 51, 51)));
        cbSeasonsAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonsAlterRActionPerformed(evt);
            }
        });

        btnUpdateAlterR.setBackground(new java.awt.Color(220, 53, 53));
        btnUpdateAlterR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateAlterR.setForeground(new java.awt.Color(248, 248, 248));
        btnUpdateAlterR.setText("Zaktualizuj");
        btnUpdateAlterR.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnUpdateAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAlterRActionPerformed(evt);
            }
        });

        btnRemoveAlterR.setBackground(new java.awt.Color(220, 53, 53));
        btnRemoveAlterR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveAlterR.setForeground(new java.awt.Color(248, 248, 248));
        btnRemoveAlterR.setText("Usuń");
        btnRemoveAlterR.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnRemoveAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAlterRActionPerformed(evt);
            }
        });

        tfLocationAlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfLocationAlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfLocationAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocationAlterRActionPerformed(evt);
            }
        });

        tfTrackAlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfTrackAlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfTrackAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTrackAlterRActionPerformed(evt);
            }
        });

        btnAddAlterR.setBackground(new java.awt.Color(220, 53, 53));
        btnAddAlterR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddAlterR.setForeground(new java.awt.Color(248, 248, 248));
        btnAddAlterR.setText("Dodaj");
        btnAddAlterR.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 53), 1, true));
        btnAddAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAlterRActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText("Sezon:");

        altRaceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Lokalizacja", "Tor", "FP1", "FP2", "FP3", "Kwalifikacje", "Wyścig"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        altRaceTable.getTableHeader().setReorderingAllowed(false);
        altRaceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                altRaceTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(altRaceTable);

        jLabel24.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("Lokalizacja:");

        jLabel25.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel25.setText("Tor:");

        tfFP1AlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfFP1AlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfFP1AlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFP1AlterRActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel26.setText("FP1");

        jLabel27.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel27.setText("FP2");

        tfFP2AlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfFP2AlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfFP2AlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFP2AlterRActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel28.setText("Kwalifikacje");

        jLabel29.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel29.setText("Wyścig");

        tfQualiAlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfQualiAlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfQualiAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQualiAlterRActionPerformed(evt);
            }
        });

        tfRaceAlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfRaceAlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfRaceAlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRaceAlterRActionPerformed(evt);
            }
        });

        tfFP3AlterR.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tfFP3AlterR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(151, 38, 38)));
        tfFP3AlterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFP3AlterRActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel30.setText("FP3");

        javax.swing.GroupLayout cardAlterRaceLayout = new javax.swing.GroupLayout(cardAlterRace);
        cardAlterRace.setLayout(cardAlterRaceLayout);
        cardAlterRaceLayout.setHorizontalGroup(
            cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterRaceLayout.createSequentialGroup()
                .addComponent(lblNewSeason6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(cardAlterRaceLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSeasonsAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfLocationAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfTrackAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfQualiAlterR, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(tfFP1AlterR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cardAlterRaceLayout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfFP2AlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfFP3AlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cardAlterRaceLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfRaceAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        cardAlterRaceLayout.setVerticalGroup(
            cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardAlterRaceLayout.createSequentialGroup()
                .addComponent(lblNewSeason6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSeasonsAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addComponent(btnUpdateAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(tfLocationAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(tfTrackAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardAlterRaceLayout.createSequentialGroup()
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(tfFP1AlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(tfFP2AlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(cardAlterRaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfQualiAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfRaceAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29)))
                        .addGap(20, 20, 20)
                        .addComponent(btnAddAlterR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel30)
                    .addComponent(tfFP3AlterR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 101, Short.MAX_VALUE))
        );

        pnlForms.add(cardAlterRace, "cardAlterRace");

        javax.swing.GroupLayout pnlCard5Layout = new javax.swing.GroupLayout(pnlCard5);
        pnlCard5.setLayout(pnlCard5Layout);
        pnlCard5Layout.setHorizontalGroup(
            pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard5Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGrantPrivileges, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterRace, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlCard5Layout.createSequentialGroup()
                            .addGroup(pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnNewSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnNewResult, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(150, 150, 150))
                        .addComponent(lblHomeTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(pnlForms, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        pnlCard5Layout.setVerticalGroup(
            pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblHomeTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(pnlCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard5Layout.createSequentialGroup()
                        .addComponent(btnNewSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnNewResult, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnGrantPrivileges, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnAlterTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnAlterDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnAlterRace, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlForms, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard5, "pnlCard5");

        jSplitPane1.setRightComponent(pnlCards);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        cardLayout.show(pnlCards, "pnlCard1");
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCard2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard2ActionPerformed
        cardLayout.show(pnlCards, "pnlCard2");
        loadCombo.loadSeasons(cbSeasonResults);
        loadRank.loadDriversRank(cbSeasonResults, rankDriversTable);
    }//GEN-LAST:event_btnCard2ActionPerformed

    private void btnCard3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard3ActionPerformed
        cardLayout.show(pnlCards, "pnlCard3");
        loadCombo.loadSeasons(jComboBox3);
        loadRacesTree(jComboBox3);
    }//GEN-LAST:event_btnCard3ActionPerformed

    private void cbStandingsResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStandingsResultsActionPerformed
        int selected = cbStandingsResults.getSelectedIndex();
        switch (selected) {
            case 0:
                cardResults.show(pnlResults, "pnlDrivers");
                loadRank.loadDriversRank(cbSeasonResults, rankDriversTable);
                break;
            case 1:
                cardResults.show(pnlResults, "pnlTeams");
                loadRank.loadTeamsRank(cbSeasonResults, rankTeamsTable);
                break;
        }
    }//GEN-LAST:event_cbStandingsResultsActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        loadRacesTree(jComboBox3);
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void btnCard4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard4ActionPerformed
        cardLayout.show(pnlCards, "pnlCard4");
        String activeSeason = "2020";
        loadCombo.loadRaces(cbRacesPred, activeSeason);
        loadCombo.loadDrivers(cbDriver1Pred, activeSeason);
        loadCombo.loadDrivers(cbDriver2Pred, activeSeason);
        loadCombo.loadTeams(cbTeamPred, activeSeason);
        loadCombo.loadPredicitions(cbSpecialPred, activeSeason);
        
        String location = (String)cbRacesPred.getSelectedItem();
        loadTable.loadPredictionsTable(predPredictionTable, _userName, location, activeSeason);
    }//GEN-LAST:event_btnCard4ActionPerformed

    private void btnNewSeasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewSeasonActionPerformed
        cardForms.show(pnlForms, "cardNewSeason");
    }//GEN-LAST:event_btnNewSeasonActionPerformed

    private void btnNewResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewResultActionPerformed
        cardForms.show(pnlForms, "cardNewResult");
        loadCombo.loadSeasons(cbSeasons);
        String year = (String)cbSeasons.getSelectedItem();
        loadCombo.loadRaces(cbRaces, year);
        loadCombo.loadDrivers(cbDrivers, year);
    }//GEN-LAST:event_btnNewResultActionPerformed

    private void btnGrantPrivilegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrantPrivilegesActionPerformed
        cardForms.show(pnlForms, "cardGrantPrivileges");
    }//GEN-LAST:event_btnGrantPrivilegesActionPerformed

    private void btnRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserActionPerformed
        cardForms.show(pnlForms, "cardRemoveUser");
    }//GEN-LAST:event_btnRemoveUserActionPerformed

    private void btnAlterTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterTeamActionPerformed
        cardForms.show(pnlForms, "cardAlterTeam");
        loadCombo.loadSeasons(cbSeasonsAlterT);
    }//GEN-LAST:event_btnAlterTeamActionPerformed

    private void btnAlterDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterDriverActionPerformed
        cardForms.show(pnlForms, "cardAlterDriver");
        loadCombo.loadSeasons(cbSeasonsAlterD);
    }//GEN-LAST:event_btnAlterDriverActionPerformed

    private void btnAlterRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterRaceActionPerformed
        cardForms.show(pnlForms, "cardAlterRace");
        loadCombo.loadSeasons(cbSeasonsAlterR);
    }//GEN-LAST:event_btnAlterRaceActionPerformed

    private void ssnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnConfirmActionPerformed
        String year = ssnYearField.getText();
        String wdc = ssnWDCField.getText();
        String wcc = ssnWCCField.getText();
     
        boolean success = inserts.addSeason(year, wdc, wcc);
        if(success) {
            JOptionPane.showMessageDialog(null, "Season: " + year + " added successfully.");
            loadTable.loadTeamsTable(ssnTeamTable, year);
            lblYear.setText(year);
            ssnYearField.setText("");
            ssnWDCField.setText("");
            ssnWCCField.setText("");
            cardForms.show(pnlForms, "cardNewTeams");
        }
    }//GEN-LAST:event_ssnConfirmActionPerformed

    private void ssnAddTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnAddTeamActionPerformed
        String name = JOptionPane.showInputDialog("Team Name: ");
        String year = lblYear.getText();
        boolean success = inserts.addTeam(year, name, 0);
        if(success)
            loadTable.loadTeamsTable(ssnTeamTable, year);
    }//GEN-LAST:event_ssnAddTeamActionPerformed

    private void ssnRemoveTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnRemoveTeamActionPerformed
        String year = lblYear.getText();
        
        DefaultTableModel model = (DefaultTableModel)ssnTeamTable.getModel();
        int row = ssnTeamTable.getSelectedRow();
        if(row > -1) {
            int teamId = (Integer)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeTeam(teamId);
            if(success)
                loadTable.loadTeamsTable(ssnTeamTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_ssnRemoveTeamActionPerformed

    private void ssnConfirmTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnConfirmTeamsActionPerformed
        String year = ssnYearField.getText();
        JOptionPane.showMessageDialog(null, "Season " + year + " teams added successfully.");
        lblYear1.setText(year);
        loadTable.loadDriversTable(ssnDriverTable, year);
        cardForms.show(pnlForms, "cardNewDrivers");
    }//GEN-LAST:event_ssnConfirmTeamsActionPerformed

    private void ssnAddDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnAddDriverActionPerformed
        String year = lblYear.getText();
        String fName = JOptionPane.showInputDialog("Driver First Name: ");
        String lName = JOptionPane.showInputDialog("Driver Last Name: ");
        
        String teamName = JOptionPane.showInputDialog("Team Name: ");

        boolean success = inserts.addDriver(year, fName, lName, teamName, 0);
        if(success)
            loadTable.loadDriversTable(ssnDriverTable, year);
    }//GEN-LAST:event_ssnAddDriverActionPerformed

    private void ssnRemoveDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnRemoveDriverActionPerformed
        String year = lblYear.getText();
        DefaultTableModel model = (DefaultTableModel)ssnDriverTable.getModel();
        int row = ssnDriverTable.getSelectedRow();
        if(row > -1) {
            int driverId = (Integer)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeDriver(driverId);
            if(success)
                loadTable.loadDriversTable(ssnDriverTable, year);
            else
                JOptionPane.showMessageDialog(null, "Error");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_ssnRemoveDriverActionPerformed

    private void ssnConfirmDriversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnConfirmDriversActionPerformed
        String year = lblYear1.getText();
        JOptionPane.showMessageDialog(null, "Season " + year + " drivers added successfully.");
        lblYear1.setText(year);
        loadTable.loadRacesTable(ssnRaceTable, year);
        cardForms.show(pnlForms, "cardNewRaces");
    }//GEN-LAST:event_ssnConfirmDriversActionPerformed

    private void ssnAddRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnAddRaceActionPerformed
        String year = lblYear.getText();
        String location = JOptionPane.showInputDialog("*np. GP Niemiec*  Location: ");
        String track = JOptionPane.showInputDialog("Track: ");
        Timestamp fp1 = Timestamp.valueOf(getTimestampFor("FP1"));
        Timestamp fp2 = Timestamp.valueOf(getTimestampFor("FP2"));
        Timestamp fp3 = Timestamp.valueOf(getTimestampFor("FP3"));
        Timestamp quali = Timestamp.valueOf(getTimestampFor("Quali"));
        Timestamp race = Timestamp.valueOf(getTimestampFor("Race"));

        boolean success = inserts.addRace(year, location, track, fp1, fp2, fp3, quali, race);
        if(success)
            loadTable.loadRacesTable(ssnRaceTable, year);
        else
            JOptionPane.showMessageDialog(null, "Failed");
    }//GEN-LAST:event_ssnAddRaceActionPerformed

    private void ssnRemoveRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnRemoveRaceActionPerformed
        String year = lblYear.getText();
        DefaultTableModel model = (DefaultTableModel)ssnRaceTable.getModel();
        int row = ssnRaceTable.getSelectedRow();
        if(row > -1) {
            int raceId = (Integer)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeRace(raceId);
            if(success)
                loadTable.loadRacesTable(ssnRaceTable, year);
            else
                JOptionPane.showMessageDialog(null, "Error");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_ssnRemoveRaceActionPerformed

    private void ssnConfirmRacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnConfirmRacesActionPerformed
        String year = lblYear1.getText();
        JOptionPane.showMessageDialog(null, "Season " + year + " races added successfully.\n Season " + year + "fully set up.");
        
        cardForms.show(pnlForms, "cardNewSeason");
    }//GEN-LAST:event_ssnConfirmRacesActionPerformed

    private void cbSeasonResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonResultsActionPerformed
        int selected = cbStandingsResults.getSelectedIndex();
        switch (selected) {
            case 0:
                loadRank.loadDriversRank(cbSeasonResults, rankDriversTable);
                break;
            case 1:
                loadRank.loadTeamsRank(cbSeasonResults, rankTeamsTable);
                break;
        }
    }//GEN-LAST:event_cbSeasonResultsActionPerformed

    private void btnAddResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResultActionPerformed
        String year = (String)cbSeasons.getSelectedItem();
        String location = (String)cbRaces.getSelectedItem();
        String driverLName = (String)cbDrivers.getSelectedItem();
        int position = Integer.parseInt(tfPosition.getText());
        int dnf = (chkDNF.isSelected())?1:0;
        int fastestLap = (chkFastestLap.isSelected())?1:0;
        
        boolean success = inserts.addResult(location, driverLName, position, dnf, fastestLap);
        if(success)
            loadTable.loadResultsTable(nrResultTable, location, year);
        else
            JOptionPane.showMessageDialog(null, "Failed");
    }//GEN-LAST:event_btnAddResultActionPerformed

    private void tfPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPositionActionPerformed

    private void chkDNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDNFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDNFActionPerformed

    private void chkFastestLapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFastestLapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFastestLapActionPerformed

    private void cbSeasonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonsActionPerformed
        String year = (String)cbSeasons.getSelectedItem();
        loadCombo.loadRaces(cbRaces, year);
        loadCombo.loadDrivers(cbDrivers, year);
        
        String location = (String)cbRaces.getSelectedItem();
        loadTable.loadResultsTable(nrResultTable, location, year);

    }//GEN-LAST:event_cbSeasonsActionPerformed

    private void cbRacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRacesActionPerformed
        String year = (String)cbSeasons.getSelectedItem();
        String location = (String)cbRaces.getSelectedItem();
        loadTable.loadResultsTable(nrResultTable, location, year);
    }//GEN-LAST:event_cbRacesActionPerformed

    private void btnFindUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindUserActionPerformed
        String userString = tfAdminPrivUser.getText();
        loadTable.findUsers(apUserTable, userString);
    }//GEN-LAST:event_btnFindUserActionPerformed

    private void btnAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAdminActionPerformed
        int row = apUserTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)apUserTable.getModel();
        if(row > -1) {
            String username = (String)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            boolean success = updates.updateAdminPriv(username, 1);
            if(success) {
                String userString = tfAdminPrivUser.getText();
                loadTable.findUsers(apUserTable, userString);
            }
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnAddAdminActionPerformed

    private void btnRemoveAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAdminActionPerformed
        int row = apUserTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)apUserTable.getModel();
        if(row > -1) {
            String username = (String)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            boolean success = updates.updateAdminPriv(username, 0);
            if(success) {
                String userString = tfAdminPrivUser.getText();
                loadTable.findUsers(apUserTable, userString);
            }
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnRemoveAdminActionPerformed

    private void btnFindUserRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindUserRemoveActionPerformed
        String userString = tfRemoveUser.getText();
        loadTable.findUsers(apUserTableRemove, userString);
    }//GEN-LAST:event_btnFindUserRemoveActionPerformed

    private void btnRemoveUserConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserConfirmActionPerformed
        int row = apUserTableRemove.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)apUserTableRemove.getModel();
        if(row > -1) {
            String username = (String)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeUser(username);
            if(success) {
                String userString = tfRemoveUser.getText();
                loadTable.findUsers(apUserTableRemove, userString);
            }
            else 
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnRemoveUserConfirmActionPerformed

    private void cbSeasonsAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonsAlterTActionPerformed
        String year = (String)cbSeasonsAlterT.getSelectedItem();
        loadTable.loadTeamsTable(altTeamTable, year);
    }//GEN-LAST:event_cbSeasonsAlterTActionPerformed

    private void btnAddAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAlterTActionPerformed
        String year = (String)cbSeasonsAlterT.getSelectedItem();
        String teamName = tfTeamNameAlterT.getText();
        int points = Integer.parseInt(tfPointsAlterT.getText());
        
        boolean success = inserts.addTeam(year, teamName, points);
        
        if(success) 
            loadTable.loadTeamsTable(altTeamTable, year);
        else 
            JOptionPane.showMessageDialog(null, "Failed");
    }//GEN-LAST:event_btnAddAlterTActionPerformed

    private void btnRemoveAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAlterTActionPerformed
        String year = (String)cbSeasonsAlterT.getSelectedItem();
        int row = altTeamTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)altTeamTable.getModel();
        
        if(row > -1) {
            int teamId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeTeam(teamId);
            if(success)
                loadTable.loadTeamsTable(altTeamTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnRemoveAlterTActionPerformed

    private void tfTeamNameAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTeamNameAlterTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTeamNameAlterTActionPerformed

    private void tfPointsAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPointsAlterTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPointsAlterTActionPerformed

    private void btnUpdateAlterTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAlterTActionPerformed
        String year = (String)cbSeasonsAlterT.getSelectedItem();
        String teamName = tfTeamNameAlterT.getText();
        int points = Integer.parseInt(tfPointsAlterT.getText());
        
        int row = altTeamTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)altTeamTable.getModel();
        
        if(row > -1) {
            int teamId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = updates.updateTeam(teamName, points, teamId);
            if(success)
                loadTable.loadTeamsTable(altTeamTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnUpdateAlterTActionPerformed

    private void altTeamTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_altTeamTableMouseClicked
        int row = altTeamTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)altTeamTable.getModel();
        tfTeamNameAlterT.setText((String)((Vector)model.getDataVector().elementAt(row)).elementAt(1));
        tfPointsAlterT.setText(String.valueOf(((Vector)model.getDataVector().elementAt(row)).elementAt(2)));
    }//GEN-LAST:event_altTeamTableMouseClicked

    private void cbSeasonsAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonsAlterDActionPerformed
        String year = (String)cbSeasonsAlterD.getSelectedItem();
        loadTable.loadDriversTable(altDriverTable, year);
    }//GEN-LAST:event_cbSeasonsAlterDActionPerformed

    private void btnUpdateAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAlterDActionPerformed
        String year = (String)cbSeasonsAlterD.getSelectedItem();
        String fName = tfDriverFNameAlterD.getText();
        String lName = tfDriverLNameAlterD.getText();
        String teamName = tfTeamNameAlterD.getText();
        int points = Integer.parseInt(tfPointsAlterD.getText());
        DefaultTableModel model = (DefaultTableModel)altDriverTable.getModel();
        int row = altDriverTable.getSelectedRow();
        
        if(row > -1) {
            int driverId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = updates.updateDriver(year, fName, lName, teamName, points, driverId);
            if(success)
                loadTable.loadDriversTable(altDriverTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnUpdateAlterDActionPerformed

    private void btnRemoveAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAlterDActionPerformed
        String year = (String)cbSeasonsAlterD.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel)altDriverTable.getModel();
        int row = altDriverTable.getSelectedRow();
        
        if(row > -1) {
            int driverId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeDriver(driverId);
            if(success)
                loadTable.loadDriversTable(altDriverTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnRemoveAlterDActionPerformed

    private void tfDriverFNameAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDriverFNameAlterDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDriverFNameAlterDActionPerformed

    private void tfPointsAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPointsAlterDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPointsAlterDActionPerformed

    private void btnAddAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAlterDActionPerformed
        String year = (String)cbSeasonsAlterD.getSelectedItem();
        String fName = tfDriverFNameAlterD.getText();
        String lName = tfDriverLNameAlterD.getText();
        String teamName = tfTeamNameAlterD.getText();
        int points = Integer.parseInt(tfPointsAlterD.getText());
        
        boolean success = inserts.addDriver(year, fName, lName, teamName, points);
        if(success)
            loadTable.loadDriversTable(altDriverTable, year);
        else
            JOptionPane.showMessageDialog(null, "Failed");
    }//GEN-LAST:event_btnAddAlterDActionPerformed

    private void altDriverTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_altDriverTableMouseClicked
        int row = altDriverTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)altDriverTable.getModel();
        
        String[] fullName = ((String)((Vector)model.getDataVector().elementAt(row)).elementAt(1)).split(" ");
        tfDriverFNameAlterD.setText(fullName[0]);
        tfDriverLNameAlterD.setText(fullName[1]);
        
        tfTeamNameAlterD.setText((String)((Vector)model.getDataVector().elementAt(row)).elementAt(2));
        
        tfPointsAlterD.setText(String.valueOf(((Vector)model.getDataVector().elementAt(row)).elementAt(3)));
    }//GEN-LAST:event_altDriverTableMouseClicked

    private void tfDriverLNameAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDriverLNameAlterDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDriverLNameAlterDActionPerformed

    private void tfTeamNameAlterDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTeamNameAlterDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTeamNameAlterDActionPerformed

    private void cbSeasonsAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonsAlterRActionPerformed
        String year = (String)cbSeasonsAlterR.getSelectedItem();
        loadTable.loadRacesTable(altRaceTable, year);
    }//GEN-LAST:event_cbSeasonsAlterRActionPerformed

    private void btnUpdateAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAlterRActionPerformed
        String year = (String)cbSeasonsAlterR.getSelectedItem();
        String location = tfLocationAlterR.getText();
        String track = tfTrackAlterR.getText();
        Timestamp fp1 = Timestamp.valueOf(tfFP1AlterR.getText());
        Timestamp fp2 = Timestamp.valueOf(tfFP2AlterR.getText());
        Timestamp fp3 = Timestamp.valueOf(tfFP3AlterR.getText());
        Timestamp quali = Timestamp.valueOf(tfQualiAlterR.getText());
        Timestamp race = Timestamp.valueOf(tfRaceAlterR.getText());
        
        DefaultTableModel model = (DefaultTableModel)altRaceTable.getModel();
        int row = altRaceTable.getSelectedRow();
        
        if(row > -1) {
            int raceId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);

            boolean success = updates.updateRace(location, track, fp1, fp2, fp3, quali, race, raceId);
            if(success)
                loadTable.loadRacesTable(altRaceTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnUpdateAlterRActionPerformed

    private void btnRemoveAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAlterRActionPerformed
        String year = (String)cbSeasonsAlterR.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel)altRaceTable.getModel();
        int row = altRaceTable.getSelectedRow();
        
        if(row > -1) {
            int raceId = (int)((Vector)model.getDataVector().elementAt(row)).elementAt(0);
            
            boolean success = deletes.removeRace(raceId);
            if(success)
                loadTable.loadRacesTable(altRaceTable, year);
            else
                JOptionPane.showMessageDialog(null, "Failed");
        }
        else {
            JOptionPane.showMessageDialog(null, "Choose a row");
        }
    }//GEN-LAST:event_btnRemoveAlterRActionPerformed

    private void tfLocationAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocationAlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocationAlterRActionPerformed

    private void tfTrackAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTrackAlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTrackAlterRActionPerformed

    private void btnAddAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAlterRActionPerformed
        String year = (String)cbSeasonsAlterR.getSelectedItem();
        String location = tfLocationAlterR.getText();
        String track = tfTrackAlterR.getText();
        Timestamp fp1 = Timestamp.valueOf(tfFP1AlterR.getText());
        Timestamp fp2 = Timestamp.valueOf(tfFP2AlterR.getText());
        Timestamp fp3 = Timestamp.valueOf(tfFP3AlterR.getText());
        Timestamp quali = Timestamp.valueOf(tfQualiAlterR.getText());
        Timestamp race = Timestamp.valueOf(tfRaceAlterR.getText());
        
        boolean success = inserts.addRace(year, location, track, fp1, fp2, fp3, quali, race);
        if(success)
            loadTable.loadRacesTable(altRaceTable, year);
        else
            JOptionPane.showMessageDialog(null, "Failed");
    }//GEN-LAST:event_btnAddAlterRActionPerformed

    private void altRaceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_altRaceTableMouseClicked
        int row = altRaceTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)altRaceTable.getModel();
        
        tfLocationAlterR.setText((String)((Vector)model.getDataVector().elementAt(row)).elementAt(1));
        tfTrackAlterR.setText((String)((Vector)model.getDataVector().elementAt(row)).elementAt(2));
        
        tfFP1AlterR.setText(((Vector)model.getDataVector().elementAt(row)).elementAt(3).toString());
        tfFP2AlterR.setText(((Vector)model.getDataVector().elementAt(row)).elementAt(4).toString());
        tfFP3AlterR.setText(((Vector)model.getDataVector().elementAt(row)).elementAt(5).toString());
        
        tfQualiAlterR.setText(((Vector)model.getDataVector().elementAt(row)).elementAt(6).toString());
        tfRaceAlterR.setText(((Vector)model.getDataVector().elementAt(row)).elementAt(7).toString());
    }//GEN-LAST:event_altRaceTableMouseClicked

    private void tfFP1AlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFP1AlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFP1AlterRActionPerformed

    private void tfFP2AlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFP2AlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFP2AlterRActionPerformed

    private void tfQualiAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQualiAlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfQualiAlterRActionPerformed

    private void tfRaceAlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRaceAlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRaceAlterRActionPerformed

    private void tfFP3AlterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFP3AlterRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFP3AlterRActionPerformed

    private void cbRacesPredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRacesPredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRacesPredActionPerformed

    private void cbDriver1PredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDriver1PredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDriver1PredActionPerformed

    private void tfPredictionValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPredictionValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPredictionValueActionPerformed

    private void btnAddPredictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPredictionActionPerformed
        String activeSeason = "2020";
        String race = (String)cbRacesPred.getSelectedItem();
        String driver1 = (String)cbDriver1Pred.getSelectedItem();
        String driver2 = (String)cbDriver2Pred.getSelectedItem();
        String team = (String)cbTeamPred.getSelectedItem();
        String special = (String)cbSpecialPred.getSelectedItem();
        tfPredictionValue.setText("0");    
        tfValueCap.setText("10000000"); 
        if(Integer.parseInt(tfPredictionValue.getText()) <= Integer.parseInt(tfValueCap.getText()) )
        {
            int raceId = getIds.getRaceId(race, activeSeason);
            int userId = getIds.getUserId(_userName);
            boolean deleted = deletes.removePredictions(userId, raceId);
            int predictionId = getIds.getPredictionId("DRIV1", activeSeason);
            boolean success1 = inserts.addPrediction(raceId, userId, predictionId, driver1);
            predictionId = getIds.getPredictionId("DRIV2", activeSeason);
            boolean success2 = inserts.addPrediction(raceId, userId, predictionId, driver2);
            predictionId = getIds.getPredictionId("TEAM", activeSeason);
            boolean success3 = inserts.addPrediction(raceId, userId, predictionId, team);
            predictionId = getIds.getPredictionId(special, activeSeason);
            boolean success4 = inserts.addPrediction(raceId, userId, predictionId, special);

            if(success1 && success2 && success3 && success4)
                loadTable.loadPredictionsTable(predPredictionTable, _userName, race, activeSeason);
            else
                JOptionPane.showMessageDialog(null,  "Failed update");
        }
        else {
            JOptionPane.showMessageDialog(null, "Za duża wartość przewidywań");
            return;
        }
    }//GEN-LAST:event_btnAddPredictionActionPerformed

    private void btnCard5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard5ActionPerformed
        cardLayout.show(pnlCards, "pnlCard5");
    }//GEN-LAST:event_btnCard5ActionPerformed

    private void tfValueCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValueCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValueCapActionPerformed

    /**
     * Funkcja do załadowania widoku harmonogramu sezonu do drzewa
     * @param jComboBox Combo Box z wybranym rokiem sezonu
     */
    public void loadRacesTree(JComboBox jComboBox) {
        String year = (String) jComboBox.getSelectedItem();
        DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();
        DefaultMutableTreeNode rootNode
                = (DefaultMutableTreeNode) model.getRoot();
        try ( Connection connection
                = DriverManager.getConnection(dbaseURL, dbUsername, dbPassword)) {
            String query = "SELECT r.location, r.track,"
                    + " r.fp1, r.fp2, r.fp3, r.quali, r.race "
                    + "FROM project.races r, project.season s "
                    + "WHERE r.season_id = s.season_id AND s.year = ? "
                    + "ORDER BY r.race";
            PreparedStatement st = connection.prepareStatement(query);
            st.setString(1, year);

            ResultSet rs = st.executeQuery();

            rootNode.removeAllChildren();
            model.reload();

            while (rs.next()) {
                String location = (String) rs.getObject(1);
                String track = (String) rs.getObject(2);
                String fp1 = new SimpleDateFormat("dd MMM YYYY").format((Timestamp) rs.getObject(3));
                String fp2 = new SimpleDateFormat("dd MMM YYYY").format((Timestamp) rs.getObject(4));
                String fp3 = new SimpleDateFormat("dd MMM YYYY").format((Timestamp) rs.getObject(5));
                String quali = new SimpleDateFormat("dd MMM YYYY").format((Timestamp) rs.getObject(6));
                String race = new SimpleDateFormat("dd MMM YYYY").format((Timestamp) rs.getObject(7));
                String weekend = new SimpleDateFormat("dd-").format((Timestamp) rs.getObject(3)) 
                                + new SimpleDateFormat("dd MMM").format((Timestamp) rs.getObject(7));
                
                if(fp1.indexOf("1970") > -1)
                {
                    fp1 = "";
                }
                
                if(fp2.indexOf("1970") > -1)
                {
                    fp2 = "";
                }
                
                if(fp3.indexOf("1970") > -1)
                {
                    fp3 = "";
                }
                
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", location, track, weekend));
                DefaultMutableTreeNode nodeFP1 = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", "FP1", fp1, weekend));
                DefaultMutableTreeNode nodeFP2 = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", "FP2", fp2, weekend));
                DefaultMutableTreeNode nodeFP3 = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", "FP3", fp3, weekend));
                DefaultMutableTreeNode nodeQuali = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", "Qualifications", quali, weekend));
                DefaultMutableTreeNode nodeRace = new DefaultMutableTreeNode(String.format("%-40s%-50s%20s", "Race", race, weekend));
                node.add(nodeFP1);
                node.add(nodeFP2);
                node.add(nodeFP3);
                node.add(nodeQuali);
                node.add(nodeRace);
                rootNode.add(node);
                model.reload();
            }
            rs.close();
            st.close();
        } catch (SQLException sqle) {
            sqle.printStackTrace();
        }
    }
    
    /**
     * Funkcja pomocnicza odbierająca datę i godzinę od użytkownika
     * i zwracająca ją jako String w formacie Timestamp 
     * @param target Nazwa sesji dla której użytkownik ma wprowadzić datę i godzinę
     * @return String w formacie yyyy-MM-dd hh:mm
     */
    String getTimestampFor(String target) {
        DateFormat timeFormat = new SimpleDateFormat("hh:mm");
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fp1Time = JOptionPane.showInputDialog("*hh:mm*   " + target + " Start Time: ");
        JDateChooser jd = new JDateChooser(new Date(), "yyyy-MM-dd");
        String message = "Choose date for " + target + ": ";
        Object[] params = {message, jd};
        JOptionPane.showConfirmDialog(null, params, target, JOptionPane.PLAIN_MESSAGE);
        String fp1Date = dateFormat.format(((JDateChooser)params[1]).getDate());
        return fp1Date + ' ' + fp1Time + ":00";
    }
    
    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppUI(_userName, _adminPrivileges).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable altDriverTable;
    private javax.swing.JTable altRaceTable;
    private javax.swing.JTable altTeamTable;
    private javax.swing.JTable apUserTable;
    private javax.swing.JTable apUserTableRemove;
    private javax.swing.JButton btnAddAdmin;
    private javax.swing.JButton btnAddAlterD;
    private javax.swing.JButton btnAddAlterR;
    private javax.swing.JButton btnAddAlterT;
    private javax.swing.JButton btnAddPrediction;
    private javax.swing.JButton btnAddResult;
    private javax.swing.JButton btnAlterDriver;
    private javax.swing.JButton btnAlterRace;
    private javax.swing.JButton btnAlterTeam;
    private javax.swing.JButton btnCard2;
    private javax.swing.JButton btnCard3;
    private javax.swing.JButton btnCard4;
    private javax.swing.JButton btnCard5;
    private javax.swing.JButton btnFindUser;
    private javax.swing.JButton btnFindUserRemove;
    private javax.swing.JButton btnGrantPrivileges;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNewResult;
    private javax.swing.JButton btnNewSeason;
    private javax.swing.JPanel btnPanel1;
    private javax.swing.JPanel btnPanel2;
    private javax.swing.JPanel btnPanel3;
    private javax.swing.JPanel btnPanel4;
    private javax.swing.JPanel btnPanel5;
    private javax.swing.JButton btnRemoveAdmin;
    private javax.swing.JButton btnRemoveAlterD;
    private javax.swing.JButton btnRemoveAlterR;
    private javax.swing.JButton btnRemoveAlterT;
    private javax.swing.JButton btnRemoveUser;
    private javax.swing.JButton btnRemoveUserConfirm;
    private javax.swing.JButton btnUpdateAlterD;
    private javax.swing.JButton btnUpdateAlterR;
    private javax.swing.JButton btnUpdateAlterT;
    private javax.swing.JPanel cardAlterDiver;
    private javax.swing.JPanel cardAlterRace;
    private javax.swing.JPanel cardAlterTeam;
    private javax.swing.JPanel cardGrantPrivileges;
    private javax.swing.JPanel cardNewDrivers;
    private javax.swing.JPanel cardNewRaces;
    private javax.swing.JPanel cardNewResult;
    private javax.swing.JPanel cardNewSeason;
    private javax.swing.JPanel cardNewTeams;
    private javax.swing.JPanel cardRemoveUser;
    private javax.swing.JComboBox<String> cbDriver1Pred;
    private javax.swing.JComboBox<String> cbDriver2Pred;
    private javax.swing.JComboBox<String> cbDrivers;
    private javax.swing.JComboBox<String> cbRaces;
    private javax.swing.JComboBox<String> cbRacesPred;
    private javax.swing.JComboBox<String> cbSeasonResults;
    private javax.swing.JComboBox<String> cbSeasons;
    private javax.swing.JComboBox<String> cbSeasonsAlterD;
    private javax.swing.JComboBox<String> cbSeasonsAlterR;
    private javax.swing.JComboBox<String> cbSeasonsAlterT;
    private javax.swing.JComboBox<String> cbSpecialPred;
    private javax.swing.JComboBox<String> cbStandingsResults;
    private javax.swing.JComboBox<String> cbTeamPred;
    private javax.swing.JCheckBox chkDNF;
    private javax.swing.JCheckBox chkFastestLap;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lblHomeTitle;
    private javax.swing.JLabel lblHomeTitle1;
    private javax.swing.JLabel lblNewSeason;
    private javax.swing.JLabel lblNewSeason1;
    private javax.swing.JLabel lblNewSeason10;
    private javax.swing.JLabel lblNewSeason11;
    private javax.swing.JLabel lblNewSeason2;
    private javax.swing.JLabel lblNewSeason3;
    private javax.swing.JLabel lblNewSeason4;
    private javax.swing.JLabel lblNewSeason5;
    private javax.swing.JLabel lblNewSeason6;
    private javax.swing.JLabel lblNewSeason7;
    private javax.swing.JLabel lblNewSeason8;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYear1;
    private javax.swing.JLabel lblYear2;
    private javax.swing.JPanel navBar;
    private javax.swing.JTable nrResultTable;
    private javax.swing.JPanel pnlCard1;
    private javax.swing.JPanel pnlCard2;
    private javax.swing.JPanel pnlCard3;
    private javax.swing.JPanel pnlCard5;
    private javax.swing.JPanel pnlCards;
    private javax.swing.JPanel pnlCards4;
    private javax.swing.JPanel pnlDrivers;
    private javax.swing.JPanel pnlForms;
    private javax.swing.JPanel pnlResults;
    private javax.swing.JPanel pnlTeams;
    private javax.swing.JTable predPredictionTable;
    private javax.swing.JTable rankDriversTable;
    private javax.swing.JTable rankTeamsTable;
    private javax.swing.JButton ssnAddDriver;
    private javax.swing.JButton ssnAddRace;
    private javax.swing.JButton ssnAddTeam;
    private javax.swing.JButton ssnConfirm;
    private javax.swing.JButton ssnConfirmDrivers;
    private javax.swing.JButton ssnConfirmRaces;
    private javax.swing.JButton ssnConfirmTeams;
    private javax.swing.JTable ssnDriverTable;
    private javax.swing.JTable ssnRaceTable;
    private javax.swing.JButton ssnRemoveDriver;
    private javax.swing.JButton ssnRemoveRace;
    private javax.swing.JButton ssnRemoveTeam;
    private javax.swing.JTable ssnTeamTable;
    private javax.swing.JTextField ssnWCCField;
    private javax.swing.JTextField ssnWDCField;
    private javax.swing.JTextField ssnYearField;
    private javax.swing.JTextField tfAdminPrivUser;
    private javax.swing.JTextField tfDriverFNameAlterD;
    private javax.swing.JTextField tfDriverLNameAlterD;
    private javax.swing.JTextField tfFP1AlterR;
    private javax.swing.JTextField tfFP2AlterR;
    private javax.swing.JTextField tfFP3AlterR;
    private javax.swing.JTextField tfLocationAlterR;
    private javax.swing.JTextField tfPointsAlterD;
    private javax.swing.JTextField tfPointsAlterT;
    private javax.swing.JTextField tfPosition;
    private javax.swing.JTextField tfPredictionValue;
    private javax.swing.JTextField tfQualiAlterR;
    private javax.swing.JTextField tfRaceAlterR;
    private javax.swing.JTextField tfRemoveUser;
    private javax.swing.JTextField tfTeamNameAlterD;
    private javax.swing.JTextField tfTeamNameAlterT;
    private javax.swing.JTextField tfTrackAlterR;
    private javax.swing.JTextField tfValueCap;
    // End of variables declaration//GEN-END:variables
}

class Renderer extends DefaultTreeCellRenderer {

    Icon icon;

    public Renderer(Icon icon) {
        this.icon = icon;
    }

    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
        super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
        if (leaf) {
            setIcon(icon);
        }
        return this;
    }
}
